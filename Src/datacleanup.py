# -*- coding: utf-8 -*-
"""DataCleanup.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H99JNbDchB8TlQPOhrsgTV_yG9i9tM37
"""

import pandas as pd
import os

# Load data
df = pd.read_csv('Raw.csv')

# Cek struktur data
print("Shape:", df.shape)
print("\nColumns:", df.columns.tolist())
print("\nFirst 5 rows:")
print(df.head())

# Cek masalah data dasar
print("=== DATA QUALITY CHECK ===")
print("Missing values:")
print(df.isnull().sum())
print(f"\nDuplicates: {df.duplicated().sum()}")

# Hapus duplikat
df_clean = df.drop_duplicates()
print(f"Data after removing duplicates: {df_clean.shape}")

# Standardize text columns
df_clean['Model'] = df_clean['Model'].str.upper().str.strip()
df_clean['Region'] = df_clean['Region'].str.title().str.strip()
df_clean['Color'] = df_clean['Color'].str.title().str.strip()
df_clean['Fuel_Type'] = df_clean['Fuel_Type'].str.title().str.strip()
df_clean['Transmission'] = df_clean['Transmission'].str.title().str.strip()

print("\n=== AFTER CLEANING ===")
print("Unique models:", df_clean['Model'].unique())
print("Unique regions:", df_clean['Region'].unique())

# Buat folder untuk menyimpan hasil
os.makedirs('cleaned_data/by_year', exist_ok=True)
os.makedirs('cleaned_data/by_model', exist_ok=True)

# Pisahkan berdasarkan rentang tahun
print("\n=== SPLITTING BY YEAR ===")

# Definisikan rentang tahun
year_ranges = [
    (2010, 2014, "2010-2014"),
    (2015, 2019, "2015-2019"),
    (2020, 2024, "2020-2024")
]

for start, end, label in year_ranges:
    year_data = df_clean[df_clean['Year'].between(start, end)]
    filename = f"cleaned_data/by_year/cars_{label}.csv"
    year_data.to_csv(filename, index=False)
    print(f"{label}: {len(year_data)} records -> {filename}")

# Simpan semua data yang sudah dibersihkan
df_clean.to_csv("cleaned_data/all_cars_cleaned.csv", index=False)
print(f"\nFull cleaned data: {len(df_clean)} records -> cleaned_data/all_cars_cleaned.csv")

print("\n=== SPLITTING BY MODEL TYPE ===")

# Group model berdasarkan seri
model_categories = {
    'Regular_Series': ['3 SERIES', '5 SERIES', '7 SERIES'],
    'X_Series': ['X1', 'X3', 'X5', 'X6'],
    'M_Performance': ['M3', 'M5'],
    'I_Series': ['I3', 'I8']
}

for category, models in model_categories.items():
    category_data = df_clean[df_clean['Model'].isin(models)]
    filename = f"cleaned_data/by_model/{category}.csv"
    category_data.to_csv(filename, index=False)
    print(f"{category}: {len(category_data)} records -> {filename}")

print("\n=== SUMMARY ===")
print(f"Total records setelah cleaning: {len(df_clean)}")

# Analisis per tahun
print("\nRecords per year:")
print(df_clean['Year'].value_counts().sort_index())

# Analisis per model
print("\nRecords per model:")
print(df_clean['Model'].value_counts())

# Analisis per region
print("\nRecords per region:")
print(df_clean['Region'].value_counts())

# Identifikasi outlier pada harga
print("\n=== PRICE ANALYSIS ===")
print(df_clean['Price_USD'].describe())

# Identifikasi outlier pada mileage
print("\n=== MILEAGE ANALYSIS ===")
print(df_clean['Mileage_KM'].describe())

# Filter outlier jika diperlukan
Q1 = df_clean['Price_USD'].quantile(0.25)
Q3 = df_clean['Price_USD'].quantile(0.75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

df_no_outliers = df_clean[
    (df_clean['Price_USD'] >= lower_bound) &
    (df_clean['Price_USD'] <= upper_bound)
]

print(f"Data setelah remove price outliers: {len(df_no_outliers)} records")
df_no_outliers.to_csv("cleaned_data/cars_no_outliers.csv", index=False)

# Buat file summary
with open("cleaned_data/cleaning_report.txt", "w") as f:
    f.write("DATA CLEANING REPORT\n")
    f.write("==================\n\n")
    f.write(f"Original records: {len(df)}\n")
    f.write(f"After cleaning: {len(df_clean)}\n")
    f.write(f"Duplicates removed: {len(df) - len(df_clean)}\n\n")

    f.write("Files created:\n")
    f.write("- all_cars_cleaned.csv (full dataset)\n")
    f.write("- cars_no_outliers.csv (without extreme prices)\n")
    f.write("- by_year/ (3 files by year ranges)\n")
    f.write("- by_model/ (4 files by model categories)\n")

print("\nâœ… Cleaning completed! Check 'cleaned_data' folder.")